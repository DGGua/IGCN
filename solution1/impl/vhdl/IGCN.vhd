-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity IGCN is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    test : IN STD_LOGIC_VECTOR (31 downto 0);
    size : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_ap_vld : OUT STD_LOGIC );
end;


architecture behav of IGCN is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "IGCN_IGCN,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z045-ffv900-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.751000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=96,HLS_SYN_LUT=320,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln12_fu_150_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln12_reg_270 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln17_fu_174_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln17_reg_278 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln16_fu_180_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln16_reg_283 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln16_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_184_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_reg_288 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln5_fu_195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln5_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln5_fu_205_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln5_reg_301 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln5_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal testarr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal testarr_ce0 : STD_LOGIC;
    signal testarr_we0 : STD_LOGIC;
    signal testarr_q0 : STD_LOGIC_VECTOR (30 downto 0);
    signal outputarr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal outputarr_ce0 : STD_LOGIC;
    signal outputarr_we0 : STD_LOGIC;
    signal outputarr_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal outputarr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_idle : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_ready : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_ce0 : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_we0 : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_d0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_idle : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_ready : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_ce0 : STD_LOGIC;
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r_ap_vld : STD_LOGIC;
    signal i_3_reg_122 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln6_fu_221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvars_iv16_fu_70 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln16_fu_226_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_fu_74 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln6_1_fu_211_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln6_fu_216_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component IGCN_IGCN_Pipeline_VITIS_LOOP_12_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        testarr_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        testarr_ce0 : OUT STD_LOGIC;
        testarr_we0 : OUT STD_LOGIC;
        testarr_d0 : OUT STD_LOGIC_VECTOR (30 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component IGCN_IGCN_Pipeline_VITIS_LOOP_19_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (31 downto 0);
        outputarr_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        outputarr_ce0 : OUT STD_LOGIC;
        outputarr_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_r_ap_vld : OUT STD_LOGIC );
    end component;


    component IGCN_testarr_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (30 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component IGCN_outputarr_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    testarr_U : component IGCN_testarr_RAM_AUTO_1R1W
    generic map (
        DataWidth => 31,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => testarr_address0,
        ce0 => testarr_ce0,
        we0 => testarr_we0,
        d0 => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_d0,
        q0 => testarr_q0);

    outputarr_U : component IGCN_outputarr_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => outputarr_address0,
        ce0 => outputarr_ce0,
        we0 => outputarr_we0,
        d0 => outputarr_d0,
        q0 => outputarr_q0);

    grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133 : component IGCN_IGCN_Pipeline_VITIS_LOOP_12_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start,
        ap_done => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done,
        ap_idle => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_idle,
        ap_ready => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_ready,
        size => size,
        testarr_address0 => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_address0,
        testarr_ce0 => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_ce0,
        testarr_we0 => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_we0,
        testarr_d0 => grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_d0,
        trunc_ln => trunc_ln12_reg_270);

    grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142 : component IGCN_IGCN_Pipeline_VITIS_LOOP_19_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start,
        ap_done => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done,
        ap_idle => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_idle,
        ap_ready => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_ready,
        size => size,
        outputarr_address0 => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_address0,
        outputarr_ce0 => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_ce0,
        outputarr_q0 => outputarr_q0,
        output_r => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r,
        output_r_ap_vld => grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_ready = ap_const_logic_1)) then 
                    grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln16_fu_168_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_ready = ap_const_logic_1)) then 
                    grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_1_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_fu_74 <= ap_const_lv4_0;
            elsif (((icmp_ln5_fu_199_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_fu_74 <= add_ln17_reg_278;
            end if; 
        end if;
    end process;

    i_3_reg_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_fu_168_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_3_reg_122 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_3_reg_122 <= add_ln5_reg_301;
            end if; 
        end if;
    end process;

    indvars_iv16_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvars_iv16_fu_70 <= ap_const_lv6_5;
            elsif (((icmp_ln5_fu_199_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvars_iv16_fu_70 <= add_ln16_fu_226_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln17_reg_278 <= add_ln17_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln5_reg_301 <= add_ln5_fu_205_p2;
                    zext_ln5_reg_293(5 downto 0) <= zext_ln5_fu_195_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln16_fu_168_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    shl_ln_reg_288(5 downto 2) <= shl_ln_fu_184_p3(5 downto 2);
                    zext_ln16_reg_283(3 downto 0) <= zext_ln16_fu_180_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln12_reg_270 <= trunc_ln12_fu_150_p1;
            end if;
        end if;
    end process;
    zext_ln16_reg_283(5 downto 4) <= "00";
    shl_ln_reg_288(1 downto 0) <= "00";
    zext_ln5_reg_293(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln16_fu_168_p2, ap_CS_fsm_state4, icmp_ln5_fu_199_p2, grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done, grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln16_fu_168_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln5_fu_199_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln16_fu_226_p2 <= std_logic_vector(unsigned(indvars_iv16_fu_70) + unsigned(ap_const_lv6_5));
    add_ln17_fu_174_p2 <= std_logic_vector(unsigned(i_1_fu_74) + unsigned(ap_const_lv4_1));
    add_ln5_fu_205_p2 <= std_logic_vector(unsigned(i_3_reg_122) + unsigned(ap_const_lv6_1));
    add_ln6_1_fu_211_p2 <= std_logic_vector(unsigned(zext_ln16_reg_283) + unsigned(i_3_reg_122));
    add_ln6_fu_216_p2 <= std_logic_vector(unsigned(add_ln6_1_fu_211_p2) + unsigned(shl_ln_reg_288));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done)
    begin
        if ((grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done)
    begin
        if ((grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start <= grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_ap_start_reg;
    grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start <= grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_ap_start_reg;
    icmp_ln16_fu_168_p2 <= "1" when (i_1_fu_74 = ap_const_lv4_A) else "0";
    icmp_ln5_fu_199_p2 <= "1" when (i_3_reg_122 = indvars_iv16_fu_70) else "0";
    output_r <= grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r;
    output_r_ap_vld <= grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_output_r_ap_vld;

    outputarr_address0_assign_proc : process(zext_ln5_reg_293, grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_address0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            outputarr_address0 <= zext_ln5_reg_293(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            outputarr_address0 <= grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_address0;
        else 
            outputarr_address0 <= "XXXXXX";
        end if; 
    end process;


    outputarr_ce0_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_ce0, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            outputarr_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            outputarr_ce0 <= grp_IGCN_Pipeline_VITIS_LOOP_19_2_fu_142_outputarr_ce0;
        else 
            outputarr_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outputarr_d0 <= (testarr_q0 & ap_const_lv1_0);

    outputarr_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            outputarr_we0 <= ap_const_logic_1;
        else 
            outputarr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln_fu_184_p3 <= (i_1_fu_74 & ap_const_lv2_0);

    testarr_address0_assign_proc : process(ap_CS_fsm_state4, grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_address0, ap_CS_fsm_state2, zext_ln6_fu_221_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            testarr_address0 <= zext_ln6_fu_221_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            testarr_address0 <= grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_address0;
        else 
            testarr_address0 <= "XXXXXX";
        end if; 
    end process;


    testarr_ce0_assign_proc : process(ap_CS_fsm_state4, grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            testarr_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            testarr_ce0 <= grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_ce0;
        else 
            testarr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    testarr_we0_assign_proc : process(grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            testarr_we0 <= grp_IGCN_Pipeline_VITIS_LOOP_12_1_fu_133_testarr_we0;
        else 
            testarr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln12_fu_150_p1 <= test(31 - 1 downto 0);
    zext_ln16_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_74),6));
    zext_ln5_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_122),64));
    zext_ln6_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln6_fu_216_p2),64));
end behav;
